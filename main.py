# Form implementation generated from reading ui file 'getinfo.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

import os.path,sys
from PyQt6 import QtCore, QtWidgets
from PyQt6.QtGui import QTextCursor, QFont
from PyQt6.QtWidgets import QApplication, QWidget, QPushButton, QFileDialog, QToolButton, QLineEdit, QTextEdit
from fofa import myfofa
from ip import getIp
from openwebpage import open
from mytools.dirsearch import getrooturl,getvalidurl
from mytools.eeyes import getNocdnIp
from mytools.fscan import getFscanUrl
from mytools.icpapi import icp


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(972, 579)
        Form.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.verticalLayoutWidget = QtWidgets.QWidget(parent=Form)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(9, 9, 191, 561))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")

        # 左侧导航栏按钮
        self.pushButton_openpage = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_openpage.setObjectName("pushButton_openpage")
        self.verticalLayout.addWidget(self.pushButton_openpage)

        self.pushButton_fofa = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_fofa.setObjectName("pushButton_fofa")
        self.verticalLayout.addWidget(self.pushButton_fofa)

        self.pushButton_icp = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_icp.setObjectName("pushButton_icp")
        self.verticalLayout.addWidget(self.pushButton_icp)

        self.pushButton_domain = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_domain.setObjectName("pushButton_domain")
        self.verticalLayout.addWidget(self.pushButton_domain)

        self.pushButton_cdn = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_cdn.setObjectName("pushButton_cdn")
        self.verticalLayout.addWidget(self.pushButton_cdn)

        self.pushButton_ip = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_ip.setObjectName("pushButton_ip")
        self.verticalLayout.addWidget(self.pushButton_ip)

        self.pushButton_fscan = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_fscan.setObjectName("pushButton_fscan")
        self.verticalLayout.addWidget(self.pushButton_fscan)

        self.pushButton_webcrack = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_webcrack.setObjectName("pushButton_webcrack")
        self.verticalLayout.addWidget(self.pushButton_webcrack)

        self.pushButton_nuclei = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_nuclei.setObjectName("pushButton_nuclei")
        self.verticalLayout.addWidget(self.pushButton_nuclei)

        self.pushButton_ehole = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_ehole.setObjectName("pushButton_ehole")
        self.verticalLayout.addWidget(self.pushButton_ehole)

        self.pushButton_dir = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_dir.setObjectName("pushButton_dir")
        self.verticalLayout.addWidget(self.pushButton_dir)

        # 弹簧控件，调整格式
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem)

        # 编辑器
        self.textEdit = QtWidgets.QTextEdit(parent=Form)
        self.textEdit.setGeometry(QtCore.QRect(203, 160, 761, 411))
        self.textEdit.setObjectName("textEdit")
        self.textEdit.insertPlainText(">>> 这里会显示提示信息 <<<\n\n")

        # 初始页
        self.frame_begin = QtWidgets.QFrame(parent=Form)
        self.frame_begin.setGeometry(QtCore.QRect(210, 10, 751, 141))
        self.frame_begin.setObjectName("frame_begin")
        self.frame_begin.setHidden(False)

        self.horizontalLayoutWidget_begin = QtWidgets.QWidget(parent=self.frame_begin)
        self.horizontalLayoutWidget_begin.setGeometry(QtCore.QRect(0, 50, 751, 31))
        self.horizontalLayoutWidget_begin.setObjectName("horizontalLayoutWidget_begin")

        self.horizontalLayout_begin = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_begin)
        self.horizontalLayout_begin.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_begin.setObjectName("horizontalLayout_begin")

        self.label_begin = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_begin)
        self.label_begin.setObjectName("label_begin")
        self.label_begin.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_begin.setFont(QFont("Sanserif", 25))
        self.label_begin.setStyleSheet("color:red")
        self.horizontalLayout_begin.addWidget(self.label_begin)

        # icp页
        self.frame_icp = QtWidgets.QFrame(parent=Form)
        self.frame_icp.setGeometry(QtCore.QRect(210, 10, 751, 141))
        self.frame_icp.setObjectName("frame_icp")
        self.frame_icp.setHidden(True)

        self.pushButton_icpApi = QtWidgets.QPushButton(parent=self.frame_icp)
        self.pushButton_icpApi.setGeometry(QtCore.QRect(0, 0, 171, 31))
        self.pushButton_icpApi.setObjectName("pushButton_icpApi")

        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(parent=self.frame_icp)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(0, 50, 751, 31))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")

        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")

        self.label_2 = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_2)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)

        self.lineEdit_icp_up = QtWidgets.QLineEdit(parent=self.horizontalLayoutWidget_2)
        self.lineEdit_icp_up.setObjectName("lineEdit_icp_up")
        self.horizontalLayout_2.addWidget(self.lineEdit_icp_up)

        self.toolButton_icp_up = QtWidgets.QToolButton(parent=self.horizontalLayoutWidget_2)
        self.toolButton_icp_up.setObjectName("toolButton_icp_up")
        self.horizontalLayout_2.addWidget(self.toolButton_icp_up)

        self.pushButton_icp_do_up = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget_2)
        self.pushButton_icp_do_up.setObjectName("pushButton_icp_do_up")
        self.horizontalLayout_2.addWidget(self.pushButton_icp_do_up)

        self.horizontalLayoutWidget_3 = QtWidgets.QWidget(parent=self.frame_icp)
        self.horizontalLayoutWidget_3.setGeometry(QtCore.QRect(-1, 89, 751, 31))
        self.horizontalLayoutWidget_3.setObjectName("horizontalLayoutWidget_3")

        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_3)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")

        self.label_3 = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_3)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_4.addWidget(self.label_3)

        self.lineEdit_icp_down = QtWidgets.QLineEdit(parent=self.horizontalLayoutWidget_3)
        self.lineEdit_icp_down.setObjectName("lineEdit_icp_down")
        self.horizontalLayout_4.addWidget(self.lineEdit_icp_down)

        self.toolButton_icp_down = QtWidgets.QToolButton(parent=self.horizontalLayoutWidget_3)
        self.toolButton_icp_down.setObjectName("toolButton_icp_down")
        self.horizontalLayout_4.addWidget(self.toolButton_icp_down)

        self.pushButton_icp_do_down = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget_3)
        self.pushButton_icp_do_down.setObjectName("pushButton_icp_do_down")
        self.horizontalLayout_4.addWidget(self.pushButton_icp_do_down)

        # 子域页
        self.frame_domain = QtWidgets.QFrame(parent=Form)
        self.frame_domain.setGeometry(QtCore.QRect(210, 10, 751, 141))
        self.frame_domain.setObjectName("frame_domain")
        self.frame_domain.setHidden(True)

        self.pushButton_oneforall = QtWidgets.QPushButton(parent=self.frame_domain)
        self.pushButton_oneforall.setGeometry(QtCore.QRect(0, 0, 171, 31))
        self.pushButton_oneforall.setObjectName("pushButton_oneforall")

        # cdn页
        self.frame_cdn = QtWidgets.QFrame(parent=Form)
        self.frame_cdn.setGeometry(QtCore.QRect(210, 10, 751, 141))
        self.frame_cdn.setObjectName("frame_cdn")
        self.frame_cdn.setHidden(True)

        self.pushButton_fcdn = QtWidgets.QPushButton(parent=self.frame_cdn)
        self.pushButton_fcdn.setGeometry(QtCore.QRect(0, 0, 171, 31))
        self.pushButton_fcdn.setObjectName("pushButton_fcdn")

        self.pushButton_eeyes = QtWidgets.QPushButton(parent=self.frame_cdn)
        self.pushButton_eeyes.setGeometry(QtCore.QRect(181, 0, 171, 31))
        self.pushButton_eeyes.setObjectName("pushButton_eeyes")

        self.horizontalLayoutWidget_cdn = QtWidgets.QWidget(parent=self.frame_cdn)
        self.horizontalLayoutWidget_cdn.setGeometry(QtCore.QRect(-1, 89, 751, 31))
        self.horizontalLayoutWidget_cdn.setObjectName("horizontalLayoutWidget_cdn")

        self.horizontalLayout_cdn = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_cdn)
        self.horizontalLayout_cdn.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_cdn.setObjectName("horizontalLayout_cdn")

        self.label_eeyes = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_cdn)
        self.label_eeyes.setObjectName("label_eeyes")
        self.horizontalLayout_cdn.addWidget(self.label_eeyes)

        self.lineEdit_eeyes = QtWidgets.QLineEdit(parent=self.horizontalLayoutWidget_cdn)
        self.lineEdit_eeyes.setObjectName("lineEdit_eeyes")
        self.horizontalLayout_cdn.addWidget(self.lineEdit_eeyes)

        self.toolButton_eeyes = QtWidgets.QToolButton(parent=self.horizontalLayoutWidget_cdn)
        self.toolButton_eeyes.setObjectName("toolButton_eeyes")
        self.horizontalLayout_cdn.addWidget(self.toolButton_eeyes)

        self.pushButton_eeyes_do = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget_cdn)
        self.pushButton_eeyes_do.setObjectName("pushButton_eeyes_do")
        self.horizontalLayout_cdn.addWidget(self.pushButton_eeyes_do)

        # ip页
        self.frame_ip = QtWidgets.QFrame(parent=Form)
        self.frame_ip.setGeometry(QtCore.QRect(210, 10, 751, 141))
        self.frame_ip.setObjectName("frame_ip")
        self.frame_ip.setHidden(True)

        self.horizontalLayoutWidget_6 = QtWidgets.QWidget(parent=self.frame_ip)
        self.horizontalLayoutWidget_6.setGeometry(QtCore.QRect(-1, -1, 751, 151))
        self.horizontalLayoutWidget_6.setObjectName("horizontalLayoutWidget_6")

        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_6)
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")

        self.label_7 = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_6)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_7.addWidget(self.label_7)

        self.label_6 = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_6)
        self.label_6.setText("")
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_7.addWidget(self.label_6)

        self.lineEdit_ip = QtWidgets.QLineEdit(parent=self.horizontalLayoutWidget_6)
        self.lineEdit_ip.setObjectName("lineEdit_ip")
        self.horizontalLayout_7.addWidget(self.lineEdit_ip)

        self.toolButton_ip = QtWidgets.QToolButton(parent=self.horizontalLayoutWidget_6)
        self.toolButton_ip.setObjectName("toolButton_ip")
        self.horizontalLayout_7.addWidget(self.toolButton_ip)

        self.pushButton_ip_do = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget_6)
        self.pushButton_ip_do.setObjectName("pushButton_ip_do")
        self.horizontalLayout_7.addWidget(self.pushButton_ip_do)

        # fofa页
        self.frame_fofa = QtWidgets.QFrame(parent=Form)
        self.frame_fofa.setGeometry(QtCore.QRect(210, 10, 751, 141))
        self.frame_fofa.setObjectName("frame_fofa")
        self.frame_fofa.setHidden(True)

        self.horizontalLayoutWidget_7 = QtWidgets.QWidget(parent=self.frame_fofa)
        self.horizontalLayoutWidget_7.setGeometry(QtCore.QRect(-1, -1, 751, 151))
        self.horizontalLayoutWidget_7.setObjectName("horizontalLayoutWidget_7")

        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_7)
        self.horizontalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")

        self.label_8 = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_7)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_8.addWidget(self.label_8)

        self.label_9 = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_7)
        self.label_9.setText("")
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_8.addWidget(self.label_9)

        self.lineEdit_fofa = QtWidgets.QLineEdit(parent=self.horizontalLayoutWidget_7)
        self.lineEdit_fofa.setObjectName("lineEdit_fofa")
        self.horizontalLayout_8.addWidget(self.lineEdit_fofa)

        self.toolButton_fofa = QtWidgets.QToolButton(parent=self.horizontalLayoutWidget_7)
        self.toolButton_fofa.setObjectName("toolButton_fofa")
        self.horizontalLayout_8.addWidget(self.toolButton_fofa)

        self.pushButton_fofa_do = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget_7)
        self.pushButton_fofa_do.setObjectName("pushButton_fofa_do")
        self.horizontalLayout_8.addWidget(self.pushButton_fofa_do)

        # fscan页
        self.frame_fscan = QtWidgets.QFrame(parent=Form)
        self.frame_fscan.setGeometry(QtCore.QRect(210, 10, 751, 141))
        self.frame_fscan.setObjectName("frame_fscan")
        self.frame_fscan.setHidden(True)

        self.pushButton_fscan_start = QtWidgets.QPushButton(parent=self.frame_fscan)
        self.pushButton_fscan_start.setGeometry(QtCore.QRect(0, 0, 171, 31))
        self.pushButton_fscan_start.setObjectName("pushButton_fscan_start")

        self.horizontalLayoutWidget_fscan = QtWidgets.QWidget(parent=self.frame_fscan)
        self.horizontalLayoutWidget_fscan.setGeometry(QtCore.QRect(-1, 49, 751, 91))
        self.horizontalLayoutWidget_fscan.setObjectName("horizontalLayoutWidget_fscan")

        self.horizontalLayout_fscan = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_fscan)
        self.horizontalLayout_fscan.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_fscan.setObjectName("horizontalLayout_fscan")

        self.label_fscan = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_fscan)
        self.label_fscan.setObjectName("label_fscan")
        self.horizontalLayout_fscan.addWidget(self.label_fscan)

        self.lineEdit_fscan = QtWidgets.QLineEdit(parent=self.horizontalLayoutWidget_fscan)
        self.lineEdit_fscan.setObjectName("lineEdit_fscan")
        self.horizontalLayout_fscan.addWidget(self.lineEdit_fscan)

        self.toolButton_fscan = QtWidgets.QToolButton(parent=self.horizontalLayoutWidget_fscan)
        self.toolButton_fscan.setObjectName("toolButton_fscan")
        self.horizontalLayout_fscan.addWidget(self.toolButton_fscan)

        self.pushButton_fscan_do = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget_fscan)
        self.pushButton_fscan_do.setObjectName("pushButton_fscan_do")
        self.horizontalLayout_fscan.addWidget(self.pushButton_fscan_do)

        # openpage页
        self.frame_openpage = QtWidgets.QFrame(parent=Form)
        self.frame_openpage.setGeometry(QtCore.QRect(210, 10, 751, 141))
        self.frame_openpage.setObjectName("frame_openpage")
        self.frame_openpage.setHidden(True)

        self.horizontalLayoutWidget_openpage = QtWidgets.QWidget(parent=self.frame_openpage)
        self.horizontalLayoutWidget_openpage.setGeometry(QtCore.QRect(-1, -1, 751, 151))
        self.horizontalLayoutWidget_openpage.setObjectName("horizontalLayoutWidget_openpage")

        self.horizontalLayout_openpage = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_openpage)
        self.horizontalLayout_openpage.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_openpage.setObjectName("horizontalLayout_openpage")

        self.label_openpage = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_openpage)
        self.label_openpage.setObjectName("label_openpage")
        self.horizontalLayout_openpage.addWidget(self.label_openpage)

        self.lineEdit_openpage = QtWidgets.QLineEdit(parent=self.horizontalLayoutWidget_openpage)
        self.lineEdit_openpage.setObjectName("lineEdit_openpage")
        self.horizontalLayout_openpage.addWidget(self.lineEdit_openpage)

        self.toolButton_openpage = QtWidgets.QToolButton(parent=self.horizontalLayoutWidget_openpage)
        self.toolButton_openpage.setObjectName("toolButton_openpage")
        self.horizontalLayout_openpage.addWidget(self.toolButton_openpage)

        self.pushButton_openpage_do = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget_openpage)
        self.pushButton_openpage_do.setObjectName("pushButton_openpage_do")
        self.horizontalLayout_openpage.addWidget(self.pushButton_openpage_do)

        # 弱口令页
        self.frame_webcrack = QtWidgets.QFrame(parent=Form)
        self.frame_webcrack.setGeometry(QtCore.QRect(210, 10, 751, 141))
        self.frame_webcrack.setObjectName("frame_webcrack")
        self.frame_webcrack.setHidden(True)

        self.pushButton_webcrack_start = QtWidgets.QPushButton(parent=self.frame_webcrack)
        self.pushButton_webcrack_start.setGeometry(QtCore.QRect(0, 0, 171, 31))
        self.pushButton_webcrack_start.setObjectName("pushButton_webcrack_start")

        # nuclei页
        self.frame_nuclei = QtWidgets.QFrame(parent=Form)
        self.frame_nuclei.setGeometry(QtCore.QRect(210, 10, 751, 141))
        self.frame_nuclei.setObjectName("frame_nuclei")
        self.frame_nuclei.setHidden(True)

        self.pushButton_nuclei_start = QtWidgets.QPushButton(parent=self.frame_nuclei)
        self.pushButton_nuclei_start.setGeometry(QtCore.QRect(0, 0, 171, 31))
        self.pushButton_nuclei_start.setObjectName("pushButton_nuclei_start")

        # 指纹识别页
        self.frame_ehole = QtWidgets.QFrame(parent=Form)
        self.frame_ehole.setGeometry(QtCore.QRect(210, 10, 751, 141))
        self.frame_ehole.setObjectName("frame_ehole")
        self.frame_ehole.setHidden(True)

        self.pushButton_ehole_start = QtWidgets.QPushButton(parent=self.frame_ehole)
        self.pushButton_ehole_start.setGeometry(QtCore.QRect(0, 0, 171, 31))
        self.pushButton_ehole_start.setObjectName("pushButton_ehole_start")

        # 目录扫描页
        self.frame_dir = QtWidgets.QFrame(parent=Form)
        self.frame_dir.setGeometry(QtCore.QRect(210, 10, 751, 141))
        self.frame_dir.setObjectName("frame_dir")
        self.frame_dir.setHidden(True)

        self.pushButton_dirsearch = QtWidgets.QPushButton(parent=self.frame_dir)
        self.pushButton_dirsearch.setGeometry(QtCore.QRect(0, 0, 171, 31))
        self.pushButton_dirsearch.setObjectName("pushButton_dirsearch")

        self.horizontalLayoutWidget_dir1 = QtWidgets.QWidget(parent=self.frame_dir)
        self.horizontalLayoutWidget_dir1.setGeometry(QtCore.QRect(0, 50, 751, 31))
        self.horizontalLayoutWidget_dir1.setObjectName("horizontalLayoutWidget_dir1")

        self.horizontalLayout_dir1 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_dir1)
        self.horizontalLayout_dir1.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_dir1.setObjectName("horizontalLayout_dir1")

        self.label_dirsearch1 = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_dir1)
        self.label_dirsearch1.setObjectName("label_dirsearch1")
        self.horizontalLayout_dir1.addWidget(self.label_dirsearch1)

        self.lineEdit_dirsearch1 = QtWidgets.QLineEdit(parent=self.horizontalLayoutWidget_dir1)
        self.lineEdit_dirsearch1.setObjectName("lineEdit_dirsearch1")
        self.horizontalLayout_dir1.addWidget(self.lineEdit_dirsearch1)

        self.toolButton_dirsearch1 = QtWidgets.QToolButton(parent=self.horizontalLayoutWidget_dir1)
        self.toolButton_dirsearch1.setObjectName("toolButton_dirsearch1")
        self.horizontalLayout_dir1.addWidget(self.toolButton_dirsearch1)

        self.pushButton_dirsearch1_do = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget_dir1)
        self.pushButton_dirsearch1_do.setObjectName("pushButton_dirsearch1_do")
        self.horizontalLayout_dir1.addWidget(self.pushButton_dirsearch1_do)

        self.horizontalLayoutWidget_dir2 = QtWidgets.QWidget(parent=self.frame_dir)
        self.horizontalLayoutWidget_dir2.setGeometry(QtCore.QRect(-1, 89, 751, 31))
        self.horizontalLayoutWidget_dir2.setObjectName("horizontalLayoutWidget_dir2")

        self.horizontalLayout_dir2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_dir2)
        self.horizontalLayout_dir2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_dir2.setObjectName("horizontalLayout_dir2")

        self.label_dirsearch2 = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_dir2)
        self.label_dirsearch2.setObjectName("label_dirsearch2")
        self.horizontalLayout_dir2.addWidget(self.label_dirsearch2)

        self.lineEdit_dirsearch2 = QtWidgets.QLineEdit(parent=self.horizontalLayoutWidget_dir2)
        self.lineEdit_dirsearch2.setObjectName("lineEdit_dirsearch2")
        self.horizontalLayout_dir2.addWidget(self.lineEdit_dirsearch2)

        self.toolButton_dirsearch2 = QtWidgets.QToolButton(parent=self.horizontalLayoutWidget_dir2)
        self.toolButton_dirsearch2.setObjectName("toolButton_dirsearch2")
        self.horizontalLayout_dir2.addWidget(self.toolButton_dirsearch2)

        self.pushButton_dirsearch2_do = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget_dir2)
        self.pushButton_dirsearch2_do.setObjectName("pushButton_dirsearch2_do")
        self.horizontalLayout_dir2.addWidget(self.pushButton_dirsearch2_do)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "红队一条龙"))
        self.pushButton_fofa.setText(_translate("Form", "fofa"))
        self.pushButton_icp.setText(_translate("Form", "icp备案"))
        self.pushButton_domain.setText(_translate("Form", "子域挖掘"))
        self.pushButton_ip.setText(_translate("Form", "域名->ip"))
        self.pushButton_icpApi.setText(_translate("Form", "icpApi 启动！！！"))
        self.label_2.setText(_translate("Form", "域名/ip -> 企业："))
        self.toolButton_icp_up.setText(_translate("Form", "..."))
        self.pushButton_icp_do_up.setText(_translate("Form", "开扫"))
        self.label_3.setText(_translate("Form", "企业 -> 域名/ip："))
        self.toolButton_icp_down.setText(_translate("Form", "..."))
        self.pushButton_icp_do_down.setText(_translate("Form", "开扫"))
        self.pushButton_oneforall.setText(_translate("Form", "oneforall 启动！！！"))
        self.label_7.setText(_translate("Form", "noCdnDomain："))
        self.toolButton_ip.setText(_translate("Form", "..."))
        self.pushButton_ip_do.setText(_translate("Form", "识别ip"))
        self.label_8.setText(_translate("Form", "初始资产："))
        self.toolButton_fofa.setText(_translate("Form", "..."))
        self.pushButton_fofa_do.setText(_translate("Form", "开扫"))

        # 初始页
        self.label_begin.setText(_translate("Form","👮👮🏻👮🏼自由 平等 公正 法治👮🏽👮🏾👮🏿"))

        # cdn识别页
        self.pushButton_cdn.setText(_translate("Form", "cdn识别"))
        self.pushButton_fcdn.setText(_translate("Form", "fcdn 启动！！！"))
        self.pushButton_eeyes.setText(_translate("Form", "Eeyes 启动！！！"))
        self.label_eeyes.setText(_translate("Form", "Eeyes日志报告："))
        self.toolButton_eeyes.setText(_translate("Form", "..."))
        self.pushButton_eeyes_do.setText(_translate("Form", "提取nocdnIP"))

        # 端口扫描页
        self.pushButton_fscan.setText(_translate("Form", "端口扫描"))
        self.pushButton_fscan_start.setText(_translate("Form", "fscan 启动！！！"))
        self.label_fscan.setText(_translate("Form", "fscan扫描报告："))
        self.toolButton_fscan.setText(_translate("Form", "..."))
        self.pushButton_fscan_do.setText(_translate("Form", "提取url"))

        # openpage页
        self.pushButton_openpage.setText(_translate("Form", "批量打开网页"))
        self.label_openpage.setText(_translate("Form", "webpage："))
        self.toolButton_openpage.setText(_translate("Form", "..."))
        self.pushButton_openpage_do.setText(_translate("Form", "开始"))

        # 弱口令页
        self.pushButton_webcrack.setText(_translate("Form", "弱口令"))
        self.pushButton_webcrack_start.setText(_translate("Form", "WebCrack 启动！！！"))

        # poc检测页
        self.pushButton_nuclei.setText(_translate("Form", "poc检测"))
        self.pushButton_nuclei_start.setText(_translate("Form", "nuclei 启动！！！"))

        # 指纹识别页
        self.pushButton_ehole.setText(_translate("Form", "指纹识别"))
        self.pushButton_ehole_start.setText(_translate("Form", "ehole 启动！！！"))

        # 目录扫描页
        self.pushButton_dir.setText(_translate("Form","目录扫描"))
        self.pushButton_dirsearch.setText(_translate("Form", "dirsearch 启动！！！"))
        self.label_dirsearch1.setText(_translate("Form", "full_url："))
        self.toolButton_dirsearch1.setText(_translate("Form", "..."))
        self.pushButton_dirsearch1_do.setText(_translate("Form", "截取根域"))
        self.label_dirsearch2.setText(_translate("Form", "dirsearch_url："))
        self.toolButton_dirsearch2.setText(_translate("Form", "..."))
        self.pushButton_dirsearch2_do.setText(_translate("Form", "开始提取"))

    # 文本编辑器
    def getTextEdit(self):
        return self.textEdit

    # 左侧菜单栏按钮
    def getPushButtonFofa(self):
        return self.pushButton_fofa

    def getPushButtonIcp(self):
        return self.pushButton_icp

    def getPushButtonDomain(self):
        return self.pushButton_domain

    def getPushButtonCdn(self):
        return self.pushButton_cdn

    def getPushButtonIp(self):
        return self.pushButton_ip

    def getPushButtonFscan(self):
        return self.pushButton_fscan

    def getPushButtonOpenpage(self):
        return self.pushButton_openpage

    def getPushButtonWebcrack(self):
        return self.pushButton_webcrack

    def getPushButtonNuclei(self):
        return self.pushButton_nuclei

    def getPushButtonEhole(self):
        return self.pushButton_ehole

    def getPushButtonDir(self):
        return self.pushButton_dir

    # 文件框
    def getLineEditIp(self):
        return self.lineEdit_ip

    def getLineEditFofa(self):
        return self.lineEdit_fofa

    def getLineEditIcpUp(self):
        return self.lineEdit_icp_up

    def getLineEditIcpDown(self):
        return self.lineEdit_icp_down

    def getLineEditDoamin(self):
        return self.lineEdit_domain

    def getLineEditFscan(self):
        return self.lineEdit_fscan

    def getLineEditOpenpage(self):
        return self.lineEdit_openpage

    def getLineEditEeyes(self):
        return self.lineEdit_eeyes

    def getLineEditDirsearch1(self):
        return self.lineEdit_dirsearch1

    def getLineEditDirsearch2(self):
        return self.lineEdit_dirsearch2

    # 文件选择器按钮
    def getToolButtonFofa(self):
        return self.toolButton_fofa

    def getToolButtonFscan(self):
        return self.toolButton_fscan

    def getToolButtonIcpUp(self):
        return self.toolButton_icp_up

    def getToolButtonIcpDown(self):
        return self.toolButton_icp_down

    def getToolButtonDomain(self):
        return self.toolButton_domain

    def getToolButtonIp(self):
        return self.toolButton_ip

    def getToolButtonOpenpage(self):
        return self.toolButton_openpage

    def getToolButtonEeyes(self):
        return self.toolButton_eeyes

    def getToolButtonDirsearch1(self):
        return self.toolButton_dirsearch1

    def getToolButtonDirsearch2(self):
        return self.toolButton_dirsearch2

    # 工具启动按钮
    def getPushButtonIcpApi(self):
        return self.pushButton_icpApi

    def getPushButtonOnforall(self):
        return self.pushButton_oneforall

    def getPushButtonFcdn(self):
        return self.pushButton_fcdn

    def getPushButtonFscanStart(self):
        return self.pushButton_fscan_start

    def getPushButtonWebcrackStart(self):
        return self.pushButton_webcrack_start

    def getPushButtonNucleiStart(self):
        return self.pushButton_nuclei_start

    def getPushButtonEholeStart(self):
        return self.pushButton_ehole_start

    def getPushButtonEeyes(self):
        return self.pushButton_eeyes

    def getPushButtonDirsearch(self):
        return self.pushButton_dirsearch

    # 脚本运行按钮
    def getPushButtonFofaDo(self):
        return self.pushButton_fofa_do

    def getPushButtonIcpDoUp(self):
        return self.pushButton_icp_do_up

    def getPushButtonIcpDoDown(self):
        return self.pushButton_icp_do_down

    def getPushButtonIpDo(self):
        return self.pushButton_ip_do

    def getPushButtonFscanDo(self):
        return self.pushButton_fscan_do

    def getPushButtonOpenpageDo(self):
        return self.pushButton_openpage_do

    def getPushButtonEeyesDo(self):
        return self.pushButton_eeyes_do

    def getPushButtonDirsearch1Do(self):
        return self.pushButton_dirsearch1_do

    def getPushButtonDirsearch2Do(self):
        return self.pushButton_dirsearch2_do

    # 设置子页面显示/隐藏状态
    def showFrameFofa(self):
        self.frame_begin.setHidden(True)
        self.frame_fofa.setHidden(False)
        self.frame_ip.setHidden(True)
        self.frame_cdn.setHidden(True)
        self.frame_domain.setHidden(True)
        self.frame_icp.setHidden(True)
        self.frame_fscan.setHidden(True)
        self.frame_openpage.setHidden(True)
        self.frame_webcrack.setHidden(True)
        self.frame_nuclei.setHidden(True)
        self.frame_ehole.setHidden(True)
        self.frame_dir.setHidden(True)

    def showFrameIcp(self):
        self.frame_begin.setHidden(True)
        self.frame_fofa.setHidden(True)
        self.frame_ip.setHidden(True)
        self.frame_cdn.setHidden(True)
        self.frame_domain.setHidden(True)
        self.frame_icp.setHidden(False)
        self.frame_fscan.setHidden(True)
        self.frame_openpage.setHidden(True)
        self.frame_webcrack.setHidden(True)
        self.frame_nuclei.setHidden(True)
        self.frame_ehole.setHidden(True)
        self.frame_dir.setHidden(True)

    def showFrameDomain(self):
        self.frame_begin.setHidden(True)
        self.frame_fofa.setHidden(True)
        self.frame_ip.setHidden(True)
        self.frame_cdn.setHidden(True)
        self.frame_domain.setHidden(False)
        self.frame_icp.setHidden(True)
        self.frame_fscan.setHidden(True)
        self.frame_openpage.setHidden(True)
        self.frame_webcrack.setHidden(True)
        self.frame_nuclei.setHidden(True)
        self.frame_ehole.setHidden(True)
        self.frame_dir.setHidden(True)

    def showFrameCdn(self):
        self.frame_begin.setHidden(True)
        self.frame_fofa.setHidden(True)
        self.frame_ip.setHidden(True)
        self.frame_cdn.setHidden(False)
        self.frame_domain.setHidden(True)
        self.frame_icp.setHidden(True)
        self.frame_fscan.setHidden(True)
        self.frame_openpage.setHidden(True)
        self.frame_webcrack.setHidden(True)
        self.frame_nuclei.setHidden(True)
        self.frame_ehole.setHidden(True)
        self.frame_dir.setHidden(True)

    def showFrameIp(self):
        self.frame_begin.setHidden(True)
        self.frame_fofa.setHidden(True)
        self.frame_ip.setHidden(False)
        self.frame_cdn.setHidden(True)
        self.frame_domain.setHidden(True)
        self.frame_icp.setHidden(True)
        self.frame_fscan.setHidden(True)
        self.frame_openpage.setHidden(True)
        self.frame_webcrack.setHidden(True)
        self.frame_nuclei.setHidden(True)
        self.frame_ehole.setHidden(True)
        self.frame_dir.setHidden(True)

    def showFrameFscan(self):
        self.frame_begin.setHidden(True)
        self.frame_fscan.setHidden(False)
        self.frame_fofa.setHidden(True)
        self.frame_ip.setHidden(True)
        self.frame_cdn.setHidden(True)
        self.frame_domain.setHidden(True)
        self.frame_icp.setHidden(True)
        self.frame_openpage.setHidden(True)
        self.frame_webcrack.setHidden(True)
        self.frame_nuclei.setHidden(True)
        self.frame_ehole.setHidden(True)
        self.frame_dir.setHidden(True)

    def showFrameOpenpage(self):
        self.frame_begin.setHidden(True)
        self.frame_fscan.setHidden(True)
        self.frame_fofa.setHidden(True)
        self.frame_ip.setHidden(True)
        self.frame_cdn.setHidden(True)
        self.frame_domain.setHidden(True)
        self.frame_icp.setHidden(True)
        self.frame_openpage.setHidden(False)
        self.frame_webcrack.setHidden(True)
        self.frame_nuclei.setHidden(True)
        self.frame_ehole.setHidden(True)
        self.frame_dir.setHidden(True)

    def showFrameWebcrack(self):
        self.frame_begin.setHidden(True)
        self.frame_fscan.setHidden(True)
        self.frame_fofa.setHidden(True)
        self.frame_ip.setHidden(True)
        self.frame_cdn.setHidden(True)
        self.frame_domain.setHidden(True)
        self.frame_icp.setHidden(True)
        self.frame_openpage.setHidden(True)
        self.frame_webcrack.setHidden(False)
        self.frame_nuclei.setHidden(True)
        self.frame_ehole.setHidden(True)
        self.frame_dir.setHidden(True)

    def showFrameNuclei(self):
        self.frame_begin.setHidden(True)
        self.frame_fscan.setHidden(True)
        self.frame_fofa.setHidden(True)
        self.frame_ip.setHidden(True)
        self.frame_cdn.setHidden(True)
        self.frame_domain.setHidden(True)
        self.frame_icp.setHidden(True)
        self.frame_openpage.setHidden(True)
        self.frame_webcrack.setHidden(True)
        self.frame_nuclei.setHidden(False)
        self.frame_ehole.setHidden(True)
        self.frame_dir.setHidden(True)

    def showFrameEhole(self):
        self.frame_begin.setHidden(True)
        self.frame_fscan.setHidden(True)
        self.frame_fofa.setHidden(True)
        self.frame_ip.setHidden(True)
        self.frame_cdn.setHidden(True)
        self.frame_domain.setHidden(True)
        self.frame_icp.setHidden(True)
        self.frame_openpage.setHidden(True)
        self.frame_webcrack.setHidden(True)
        self.frame_nuclei.setHidden(True)
        self.frame_ehole.setHidden(False)
        self.frame_dir.setHidden(True)

    def showFrameDir(self):
        self.frame_begin.setHidden(True)
        self.frame_fscan.setHidden(True)
        self.frame_fofa.setHidden(True)
        self.frame_ip.setHidden(True)
        self.frame_cdn.setHidden(True)
        self.frame_domain.setHidden(True)
        self.frame_icp.setHidden(True)
        self.frame_openpage.setHidden(True)
        self.frame_webcrack.setHidden(True)
        self.frame_nuclei.setHidden(True)
        self.frame_ehole.setHidden(True)
        self.frame_dir.setHidden(False)

    # 选择文件
    def selectFofaTxt(self):
        fd = QFileDialog()
        fd.setFileMode(QFileDialog.FileMode.ExistingFile)
        fd.setNameFilter("Text files (*.txt);;All files (*.*)")  # 设置文件过滤器
        fd.setDirectory(os.getcwd())    # 设置默认打开的目录位置
        # 将获取到的文件路径写入对应文本框中
        if fd.exec():
            lineEditFofa:QLineEdit = self.getLineEditFofa()
            lineEditFofa.setText(fd.selectedFiles()[0])

    def selectIcpDomainTxt(self):
        fd = QFileDialog()
        fd.setFileMode(QFileDialog.FileMode.ExistingFile)
        fd.setNameFilter("Text files (*.txt);;All files (*.*)")  # 设置文件过滤器
        fd.setDirectory(os.getcwd())    # 设置默认打开的目录位置
        # 将获取到的文件路径写入对应文本框中
        if fd.exec():
            lineEditIcpUp:QLineEdit = self.getLineEditIcpUp()
            lineEditIcpUp.setText(fd.selectedFiles()[0])

    def selectIcpCompanyTxt(self):
        fd = QFileDialog()
        fd.setFileMode(QFileDialog.FileMode.ExistingFile)
        fd.setNameFilter("Text files (*.txt);;All files (*.*)")  # 设置文件过滤器
        fd.setDirectory(os.getcwd())    # 设置默认打开的目录位置
        # 将获取到的文件路径写入对应文本框中
        if fd.exec():
            lineEditIcpDown:QLineEdit = self.getLineEditIcpDown()
            lineEditIcpDown.setText(fd.selectedFiles()[0])

    def selectOneforallTxt(self):
        fd = QFileDialog()
        fd.setFileMode(QFileDialog.FileMode.ExistingFile)
        fd.setNameFilter("Text files (*.txt);;All files (*.*)")  # 设置文件过滤器
        fd.setDirectory(os.getcwd())    # 设置默认打开的目录位置
        # 将获取到的文件路径写入对应文本框中
        if fd.exec():
            lineEditDomain:QLineEdit = self.getLineEditDoamin()
            lineEditDomain.setText(fd.selectedFiles()[0])

    def selectNocdnTxt(self):
        fd = QFileDialog()
        fd.setFileMode(QFileDialog.FileMode.ExistingFile)
        fd.setNameFilter("Text files (*.txt);;All files (*.*)")  # 设置文件过滤器
        fd.setDirectory(os.getcwd())    # 设置默认打开的目录位置
        # 将获取到的文件路径写入对应文本框中
        if fd.exec():
            lineEditIp:QLineEdit = self.getLineEditIp()
            lineEditIp.setText(fd.selectedFiles()[0])

    def selectFscanTxt(self):
        fd = QFileDialog()
        fd.setFileMode(QFileDialog.FileMode.ExistingFile)
        fd.setNameFilter("Text files (*.txt);;All files (*.*)")  # 设置文件过滤器
        fd.setDirectory(os.getcwd())    # 设置默认打开的目录位置
        # 将获取到的文件路径写入对应文本框中
        if fd.exec():
            lineEditFscan:QLineEdit = self.getLineEditFscan()
            lineEditFscan.setText(fd.selectedFiles()[0])

    def selectWebpageTxt(self):
        fd = QFileDialog()
        fd.setFileMode(QFileDialog.FileMode.ExistingFile)
        fd.setNameFilter("Text files (*.txt);;All files (*.*)")  # 设置文件过滤器
        fd.setDirectory(os.getcwd())    # 设置默认打开的目录位置
        # 将获取到的文件路径写入对应文本框中
        if fd.exec():
            lineEditOpenpage:QLineEdit = self.getLineEditOpenpage()
            lineEditOpenpage.setText(fd.selectedFiles()[0])

    def selectEeyesLog(self):
        fd = QFileDialog()
        fd.setFileMode(QFileDialog.FileMode.ExistingFile)
        fd.setNameFilter("Text files (*.log);;All files (*.*)")  # 设置文件过滤器
        fd.setDirectory(os.getcwd())    # 设置默认打开的目录位置
        # 将获取到的文件路径写入对应文本框中
        if fd.exec():
            lineEditEeyes:QLineEdit = self.getLineEditEeyes()
            lineEditEeyes.setText(fd.selectedFiles()[0])

    def selectDirsearchTxt1(self):
        fd = QFileDialog()
        fd.setFileMode(QFileDialog.FileMode.ExistingFile)
        fd.setNameFilter("Text files (*.txt);;All files (*.*)")  # 设置文件过滤器
        fd.setDirectory(os.getcwd())    # 设置默认打开的目录位置
        # 将获取到的文件路径写入对应文本框中
        if fd.exec():
            lineEditDirsearch1:QLineEdit = self.getLineEditDirsearch1()
            lineEditDirsearch1.setText(fd.selectedFiles()[0])

    def selectDirsearchTxt2(self):
        fd = QFileDialog()
        fd.setFileMode(QFileDialog.FileMode.ExistingFile)
        fd.setNameFilter("Text files (*.txt);;All files (*.*)")  # 设置文件过滤器
        fd.setDirectory(os.getcwd())    # 设置默认打开的目录位置
        # 将获取到的文件路径写入对应文本框中
        if fd.exec():
            lineEditDirsearch2:QLineEdit = self.getLineEditDirsearch2()
            lineEditDirsearch2.setText(fd.selectedFiles()[0])

    # 运行脚本
    def fofaDo(self):
        lineEditFofaText:QLineEdit = self.lineEdit_fofa
        path = lineEditFofaText.text()
        if path != '':
            myfofa.main(path)

            textEdit: QTextEdit = self.textEdit
            # 在执行 insertPlainText 之前将光标定位到文本最后
            cursor = textEdit.textCursor()
            cursor.movePosition(QTextCursor.MoveOperation.End)
            textEdit.setTextCursor(cursor)

            textEdit.insertPlainText('报告位置：' + os.path.abspath('./fofa/result\n\n'))

    def startIcpApi(self):
        os.chdir('./icpApi')
        os.system('start cmd.exe')
        os.chdir('../')     # 重新定位当前目录位置
        textEdit: QTextEdit = self.textEdit

        # 在执行 insertPlainText 之前将光标定位到文本最后
        cursor = textEdit.textCursor()
        cursor.movePosition(QTextCursor.MoveOperation.End)
        textEdit.setTextCursor(cursor)

        textEdit.insertPlainText('！！！使用完毕后请务必手动暂停项目以释放资源，避免端口被占用！！！\n')
        textEdit.insertPlainText('icpApi命令：\n')
        textEdit.insertPlainText('python icpApi.py\n\n')

    def getCompany(self):
        lineEditIcpUp:QLineEdit = self.getLineEditIcpUp()
        path = lineEditIcpUp.text()
        if path != '':
            icp.getCompany(path)

            textEdit: QTextEdit = self.textEdit
            # 在执行 insertPlainText 之前将光标定位到文本最后
            cursor = textEdit.textCursor()
            cursor.movePosition(QTextCursor.MoveOperation.End)
            textEdit.setTextCursor(cursor)

            textEdit.insertPlainText('报告位置：' + os.path.abspath('./icpApi/result/company\n\n'))

    def getDomain(self):
        lineEditIcpDown:QLineEdit = self.getLineEditIcpDown()
        path = lineEditIcpDown.text()
        if path != '':
            icp.getDomain(path)

            textEdit: QTextEdit = self.textEdit
            # 在执行 insertPlainText 之前将光标定位到文本最后
            cursor = textEdit.textCursor()
            cursor.movePosition(QTextCursor.MoveOperation.End)
            textEdit.setTextCursor(cursor)

            textEdit.insertPlainText('报告位置：' + os.path.abspath('./icpApi/result/domain\n\n'))

    def startOneforall(self):
        os.chdir('./oneforall')
        os.system('start cmd.exe')
        os.chdir('../')     # 重新定位当前目录位置

        textEdit: QTextEdit = self.textEdit
        # 在执行 insertPlainText 之前将光标定位到文本最后
        cursor = textEdit.textCursor()
        cursor.movePosition(QTextCursor.MoveOperation.End)
        textEdit.setTextCursor(cursor)

        textEdit.insertPlainText('oneforall扫描报告将会保存在：' + os.path.abspath('./oneforall/results\n'))
        textEdit.insertPlainText('oneforall命令：\n')
        textEdit.insertPlainText('python oneforall.py --targets <域名.txt> --port medium run\n\n')

    def startFcdn(self):
        os.chdir('./fcdn')
        os.system('start cmd.exe')
        os.chdir('../')     # 重新定位当前目录位置
        textEdit: QTextEdit = self.textEdit

        # 在执行 insertPlainText 之前将光标定位到文本最后
        cursor = textEdit.textCursor()
        cursor.movePosition(QTextCursor.MoveOperation.End)
        textEdit.setTextCursor(cursor)

        textEdit.insertPlainText('fcdn扫描报告将会被保存在：' + os.path.abspath('./fcdn/result\n'))
        textEdit.insertPlainText('fcdn命令：\n')
        textEdit.insertPlainText('python main.py -f <域名.txt> -t 100\n\n')

    def getIp(self):
        lineEditIp:QLineEdit = self.getLineEditIp()
        path = lineEditIp.text()
        if path != '':
            getIp.get_ip_address(path)

            textEdit: QTextEdit = self.textEdit
            # 在执行 insertPlainText 之前将光标定位到文本最后
            cursor = textEdit.textCursor()
            cursor.movePosition(QTextCursor.MoveOperation.End)
            textEdit.setTextCursor(cursor)

            textEdit.insertPlainText('报告位置：' + os.path.abspath('./ip/result'))

    def startFscan(self):
        os.chdir('./fscan')
        os.system('start cmd.exe')
        os.chdir('../')     # 重新定位当前目录位置
        textEdit: QTextEdit = self.textEdit

        # 在执行 insertPlainText 之前将光标定位到文本最后
        cursor = textEdit.textCursor()
        cursor.movePosition(QTextCursor.MoveOperation.End)
        textEdit.setTextCursor(cursor)

        textEdit.insertPlainText('fscan扫描报告位置：' + os.path.abspath('./fscan/result.txt\n'))
        textEdit.insertPlainText('fscan命令：\n')
        textEdit.insertPlainText('fscan-雨航二开版.exe -hf <ip.txt> -np -nobr -p 1-65535\n\n')

    def getFscanUrl(self):
        lineEditFscan:QLineEdit = self.getLineEditFscan()
        path = lineEditFscan.text()
        if path != '':
            getFscanUrl.getUrl(path)

            textEdit: QTextEdit = self.textEdit
            # 在执行 insertPlainText 之前将光标定位到文本最后
            cursor = textEdit.textCursor()
            cursor.movePosition(QTextCursor.MoveOperation.End)
            textEdit.setTextCursor(cursor)

            textEdit.insertPlainText('报告位置：' + os.path.abspath('./fscan/result\n\n'))

    def openPage(self):
        textEdit: QTextEdit = self.textEdit
        textEdit.insertPlainText('>>>请前往控制台操作<<<\n\n')
        lineEditOpenpage:QLineEdit = self.getLineEditOpenpage()
        path = lineEditOpenpage.text()
        if path != '':
            open.openPage(path)

    def startWebcrack(self):
        os.chdir('./WebCrack')
        os.system('start cmd.exe')
        os.chdir('../')     # 重新定位当前目录位置
        textEdit: QTextEdit = self.textEdit

        # 在执行 insertPlainText 之前将光标定位到文本最后
        cursor = textEdit.textCursor()
        cursor.movePosition(QTextCursor.MoveOperation.End)
        textEdit.setTextCursor(cursor)

        textEdit.insertPlainText('WebCrack命令：\n')
        textEdit.insertPlainText('python webcrack.py\n\n')

    def startNuclei(self):
        os.chdir('./nuclei')
        os.system('start cmd.exe')
        os.chdir('../')     # 重新定位当前目录位置
        textEdit: QTextEdit = self.textEdit

        # 在执行 insertPlainText 之前将光标定位到文本最后
        cursor = textEdit.textCursor()
        cursor.movePosition(QTextCursor.MoveOperation.End)
        textEdit.setTextCursor(cursor)

        textEdit.insertPlainText('nuclei命令：\n')
        textEdit.insertPlainText('nuclei.exe -l <url.txt>\n\n')

    def startEhole(self):
        os.chdir('./ehole')
        os.system('start cmd.exe')
        os.chdir('../')     # 重新定位当前目录位置
        textEdit: QTextEdit = self.textEdit

        # 在执行 insertPlainText 之前将光标定位到文本最后
        cursor = textEdit.textCursor()
        cursor.movePosition(QTextCursor.MoveOperation.End)
        textEdit.setTextCursor(cursor)

        textEdit.insertPlainText('ehole命令：\n')
        textEdit.insertPlainText('EHole_windows_amd64.exe finger -l <url.txt>\n\n')

    def startEeyes(self):
        os.chdir('./Eeyes')
        os.system('start cmd.exe')
        os.chdir('../')     # 重新定位当前目录位置
        textEdit: QTextEdit = self.textEdit

        # 在执行 insertPlainText 之前将光标定位到文本最后
        cursor = textEdit.textCursor()
        cursor.movePosition(QTextCursor.MoveOperation.End)
        textEdit.setTextCursor(cursor)

        textEdit.insertPlainText(f'！！！使用前请先删除Eeyes扫描日志报告 -> {os.path.abspath("./Eeyes/server.log")}！！！\n')
        textEdit.insertPlainText('Eeyes命令：\n')
        textEdit.insertPlainText('Eeyes.exe -l <url.txt>\n\n')

    def getEeyesNocdnIp(self):
        lineEditEeyes:QLineEdit = self.getLineEditEeyes()
        path = lineEditEeyes.text()
        if path != '':
            getNocdnIp.getIp(path)

            textEdit: QTextEdit = self.textEdit
            # 在执行 insertPlainText 之前将光标定位到文本最后
            cursor = textEdit.textCursor()
            cursor.movePosition(QTextCursor.MoveOperation.End)
            textEdit.setTextCursor(cursor)

            textEdit.insertPlainText('报告位置：' + os.path.abspath('./Eeyes/result\n\n'))

    def startDirsearch(self):
        os.chdir('./dirsearch')
        os.system('start cmd.exe')
        os.chdir('../')     # 重新定位当前目录位置
        textEdit: QTextEdit = self.textEdit

        # 在执行 insertPlainText 之前将光标定位到文本最后
        cursor = textEdit.textCursor()
        cursor.movePosition(QTextCursor.MoveOperation.End)
        textEdit.setTextCursor(cursor)

        textEdit.insertPlainText('dirsearch扫描报告将保存在：' + os.path.abspath('./dirsearch/reports\n'))
        textEdit.insertPlainText('dirsearch命令：\n')
        textEdit.insertPlainText('python dirsearch.py -l <root_url.txt>\n\n')

    def getRootUrl(self):
        lineEditDirsearch1:QLineEdit = self.getLineEditDirsearch1()
        path = lineEditDirsearch1.text()
        if path != '':
            getrooturl.getRootUrl(path)

            textEdit: QTextEdit = self.textEdit
            # 在执行 insertPlainText 之前将光标定位到文本最后
            cursor = textEdit.textCursor()
            cursor.movePosition(QTextCursor.MoveOperation.End)
            textEdit.setTextCursor(cursor)

            textEdit.insertPlainText('报告位置：' + os.path.abspath('./dirsearch/result/rooturl\n\n'))

    def getValidUrl(self):
        lineEditDirsearch2:QLineEdit = self.getLineEditDirsearch2()
        path = lineEditDirsearch2.text()
        if path != '':
            getvalidurl.getValidUrl(path)

            textEdit: QTextEdit = self.textEdit
            # 在执行 insertPlainText 之前将光标定位到文本最后
            cursor = textEdit.textCursor()
            cursor.movePosition(QTextCursor.MoveOperation.End)
            textEdit.setTextCursor(cursor)

            textEdit.insertPlainText('报告位置：' + os.path.abspath('./dirsearch/result/rooturl\n\n'))

if __name__ == '__main__':
    app = QApplication(sys.argv)
    w = QWidget()
    ui = Ui_Form()
    ui.setupUi(w)

    # 页面选择-fofa
    pushButtonFofa:QPushButton = ui.getPushButtonFofa()
    pushButtonFofa.clicked.connect(ui.showFrameFofa)

    # 页面选择-icp备案
    pushButtonIcp:QPushButton = ui.getPushButtonIcp()
    pushButtonIcp.clicked.connect(ui.showFrameIcp)

    # 页面选择-子域挖掘
    pushButtonDomain:QPushButton = ui.getPushButtonDomain()
    pushButtonDomain.clicked.connect(ui.showFrameDomain)

    # 页面选择-cdn识别
    pushButtonCdn:QPushButton = ui.getPushButtonCdn()
    pushButtonCdn.clicked.connect(ui.showFrameCdn)

    # 页面选择-识别ip
    pushButtonIp:QPushButton = ui.getPushButtonIp()
    pushButtonIp.clicked.connect(ui.showFrameIp)

    # 文件选择-初始资产
    toolButtonFofa:QToolButton = ui.getToolButtonFofa()
    toolButtonFofa.clicked.connect(ui.selectFofaTxt)

    # 运行脚本-fofa探测
    pushButtonFofaDo:QPushButton = ui.getPushButtonFofaDo()
    pushButtonFofaDo.clicked.connect(ui.fofaDo)

    # 启动工具-icpApi
    pushButtonIcpApi:QPushButton = ui.getPushButtonIcpApi()
    pushButtonIcpApi.clicked.connect(ui.startIcpApi)

    # 文件选择-初始资产
    toolButtonIcpUp:QToolButton = ui.getToolButtonIcpUp()
    toolButtonIcpUp.clicked.connect(ui.selectIcpDomainTxt)

    # 运行脚本-icp 域名/ip->企业名称
    pushButtonIcpDoUp:QPushButton = ui.getPushButtonIcpDoUp()
    pushButtonIcpDoUp.clicked.connect(ui.getCompany)

    # 文件选择-企业名称文件
    toolButtonIcpDwon:QToolButton = ui.getToolButtonIcpDown()
    toolButtonIcpDwon.clicked.connect(ui.selectIcpCompanyTxt)

    # 运行脚本-icp 企业名称->备案域名
    pushButtonIcpDoDown:QPushButton = ui.getPushButtonIcpDoDown()
    pushButtonIcpDoDown.clicked.connect(ui.getDomain)

    # 启动工具-oneforall
    pushButtonOneforall:QPushButton = ui.getPushButtonOnforall()
    pushButtonOneforall.clicked.connect(ui.startOneforall)

    # 工具启动-fcdn
    pushButtonFcdn:QPushButton = ui.getPushButtonFcdn()
    pushButtonFcdn.clicked.connect(ui.startFcdn)

    # 文件选择-nocdn域名文件
    toolButtonIp:QToolButton = ui.getToolButtonIp()
    toolButtonIp.clicked.connect(ui.selectNocdnTxt)

    # 运行脚本-识别ip
    pushButtonIpDo:QPushButton = ui.getPushButtonIpDo()
    pushButtonIpDo.clicked.connect(ui.getIp)

    # 页面选择-fscan
    pushButtonFscan:QPushButton = ui.getPushButtonFscan()
    pushButtonFscan.clicked.connect(ui.showFrameFscan)

    # 启动工具-fscan
    pushButtonFscanStart:QPushButton = ui.getPushButtonFscanStart()
    pushButtonFscanStart.clicked.connect(ui.startFscan)

    # 文件选择-fscan扫描报告
    toolButtonFscan:QToolButton = ui.getToolButtonFscan()
    toolButtonFscan.clicked.connect(ui.selectFscanTxt)

    # 运行脚本-提取fscan报告url
    pushButtonFscanDo:QPushButton = ui.getPushButtonFscanDo()
    pushButtonFscanDo.clicked.connect(ui.getFscanUrl)

    # 页面选择-批量打开网页
    pushButtonOpenpage:QPushButton = ui.getPushButtonOpenpage()
    pushButtonOpenpage.clicked.connect(ui.showFrameOpenpage)

    # 文件选择-webpage
    toolButtonOpenpage:QToolButton = ui.getToolButtonOpenpage()
    toolButtonOpenpage.clicked.connect(ui.selectWebpageTxt)

    # 运行脚本-批量打开网页
    pushButtonOpenpageDo:QPushButton = ui.getPushButtonOpenpageDo()
    pushButtonOpenpageDo.clicked.connect(ui.openPage)

    # 页面选择-弱口令
    pushButtonWebcrack:QPushButton = ui.getPushButtonWebcrack()
    pushButtonWebcrack.clicked.connect(ui.showFrameWebcrack)

    # 启动工具-webcrack
    pushButtonWebcrackStart:QPushButton = ui.getPushButtonWebcrackStart()
    pushButtonWebcrackStart.clicked.connect(ui.startWebcrack)

    # 页面选择-nuclei
    pushButtonNuclei:QPushButton = ui.getPushButtonNuclei()
    pushButtonNuclei.clicked.connect(ui.showFrameNuclei)

    # 启动工具-nuclei
    pushButtonNucleiStart:QPushButton = ui.getPushButtonNucleiStart()
    pushButtonNucleiStart.clicked.connect(ui.startNuclei)

    # 页面选择-指纹识别
    pushButtonEhole:QPushButton = ui.getPushButtonEhole()
    pushButtonEhole.clicked.connect(ui.showFrameEhole)

    # 启动工具-ehole
    pushButtonEholeStart:QPushButton = ui.getPushButtonEholeStart()
    pushButtonEholeStart.clicked.connect(ui.startEhole)

    # 启动工具-Eeyes
    pushButtonEeyes:QPushButton = ui.getPushButtonEeyes()
    pushButtonEeyes.clicked.connect(ui.startEeyes)

    # 文件选择-Eeyes日志报告
    toolButtonEeyes:QToolButton = ui.getToolButtonEeyes()
    toolButtonEeyes.clicked.connect(ui.selectEeyesLog)

    # 运行脚本-提取Eeyes日志报告noCdnIp
    pushButtonEeyesDo:QPushButton = ui.getPushButtonEeyesDo()
    pushButtonEeyesDo.clicked.connect(ui.getEeyesNocdnIp)

    # 页面选择-目录扫描
    pushButtonDir:QPushButton = ui.getPushButtonDir()
    pushButtonDir.clicked.connect(ui.showFrameDir)

    # 工具启动-dirsearch
    pushButtonDirsearch:QPushButton = ui.getPushButtonDirsearch()
    pushButtonDirsearch.clicked.connect(ui.startDirsearch)

    # 文件选择-端口扫描报告提取的url
    toolButtonDirsearch1:QToolButton = ui.getToolButtonDirsearch1()
    toolButtonDirsearch1.clicked.connect(ui.selectDirsearchTxt1)

    # 运行脚本-截取rooturl
    pushButtonDirsearch1Do:QPushButton = ui.getPushButtonDirsearch1Do()
    pushButtonDirsearch1Do.clicked.connect(ui.getRootUrl)

    # 文件选择-rooturl
    toolButtonDirsearch2:QToolButton = ui.getToolButtonDirsearch2()
    toolButtonDirsearch2.clicked.connect(ui.selectDirsearchTxt2)

    # 运行脚本-提取validurl
    pushButtonDirsearch2Do:QPushButton = ui.getPushButtonDirsearch2Do()
    pushButtonDirsearch2Do.clicked.connect(ui.getValidUrl)

    w.show()
    sys.exit(app.exec())